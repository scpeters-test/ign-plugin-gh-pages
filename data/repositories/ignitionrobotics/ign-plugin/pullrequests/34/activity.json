{"pagelen": 50, "values": [{"update": {"description": "While porting code from Gazebo-classic to Ignition, often some Gazebo 9 plugin sneakily hides inside an SDF / URDF file, happens to be on the path and we try to `dlopen` it. The problem is that this mixes 2 different versions of `ign-msgs`, which causes protobuf to throw an exception:\r\n\r\n~~~\r\n[libprotobuf ERROR google/protobuf/descriptor_database.cc:57] File already exists in database: ignition/msgs/time.proto                                                         \r\n[libprotobuf FATAL google/protobuf/descriptor.cc:1164] CHECK failed: generated_database_->Add(encoded_file_descriptor, size):\r\nterminate called after throwing an instance of 'google::protobuf::FatalException'   \r\n  what():  CHECK failed: generated_database_->Add(encoded_file_descriptor, size):  \r\n~~~\r\n\r\nThis causes the whole program to crash, and it's tough for the end user to realize what's going wrong. Ideally, we'd handle this more elegantly. Maybe something can be done on the `ign-msgs` side. But for now, I tried something here.\r\n\r\nThis try/catch block cleanly handles the situation for me, the following is printed, the library is ignored and simulation goes on:\r\n\r\n\r\n```\r\nException thrown while loading library [/home/chapulina/rmf/build/ros1/install/lib/libpayload_handler.so]\r\n[Err] [SystemLoader.cc:75] Failed to load system plugin [libpayload_handler.so] : couldn't load library on path [/home/chapulina/rmf/build/ros1/install/lib/libpayload_handler.s\r\no].\r\n```\r\n\r\nBut the catch (no pun intended) is that if I don't wrap the `dlopen` call with those sleeps, for some reason the program fails to catch protobuf's exception and crashes. I really don't understand how that would matter.\r\n\r\nReading answers like [this](https://stackoverflow.com/questions/413473/dlopen-on-library-with-static-member-that-throws-exception-in-constructor-resu) it sounds like we shouldn't be able to catch that exception in the first place, but somehow the sleeps make it work.", "title": "[WIP] Catch exception thrown during dlopen", "destination": {"commit": {"hash": "6689cfd44b98", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/commit/6689cfd44b98.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/commits/6689cfd44b98"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f4e3de89-d527-44d3-b10f-fde17d644890}ts=c_plus_plus"}}, "type": "repository", "name": "ign-plugin", "full_name": "ignitionrobotics/ign-plugin", "uuid": "{f4e3de89-d527-44d3-b10f-fde17d644890}"}, "branch": {"name": "ign-plugin1"}}, "reason": "We should look into a proper solution later", "source": {"commit": {"hash": "ba4e61bb9898", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/commit/ba4e61bb9898.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/commits/ba4e61bb9898"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f4e3de89-d527-44d3-b10f-fde17d644890}ts=c_plus_plus"}}, "type": "repository", "name": "ign-plugin", "full_name": "ignitionrobotics/ign-plugin", "uuid": "{f4e3de89-d527-44d3-b10f-fde17d644890}"}, "branch": {"name": "dlopen_exception"}}, "state": "DECLINED", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2020-04-01T23:17:10.661259+00:00"}, "pull_request": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/pullrequests/34.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/pull-requests/34"}}, "title": "[WIP] Catch exception thrown during dlopen"}}, {"update": {"description": "While porting code from Gazebo-classic to Ignition, often some Gazebo 9 plugin sneakily hides inside an SDF / URDF file, happens to be on the path and we try to `dlopen` it. The problem is that this mixes 2 different versions of `ign-msgs`, which causes protobuf to throw an exception:\r\n\r\n~~~\r\n[libprotobuf ERROR google/protobuf/descriptor_database.cc:57] File already exists in database: ignition/msgs/time.proto                                                         \r\n[libprotobuf FATAL google/protobuf/descriptor.cc:1164] CHECK failed: generated_database_->Add(encoded_file_descriptor, size):\r\nterminate called after throwing an instance of 'google::protobuf::FatalException'   \r\n  what():  CHECK failed: generated_database_->Add(encoded_file_descriptor, size):  \r\n~~~\r\n\r\nThis causes the whole program to crash, and it's tough for the end user to realize what's going wrong. Ideally, we'd handle this more elegantly. Maybe something can be done on the `ign-msgs` side. But for now, I tried something here.\r\n\r\nThis try/catch block cleanly handles the situation for me, the following is printed, the library is ignored and simulation goes on:\r\n\r\n\r\n```\r\nException thrown while loading library [/home/chapulina/rmf/build/ros1/install/lib/libpayload_handler.so]\r\n[Err] [SystemLoader.cc:75] Failed to load system plugin [libpayload_handler.so] : couldn't load library on path [/home/chapulina/rmf/build/ros1/install/lib/libpayload_handler.s\r\no].\r\n```\r\n\r\nBut the catch (no pun intended) is that if I don't wrap the `dlopen` call with those sleeps, for some reason the program fails to catch protobuf's exception and crashes. I really don't understand how that would matter.\r\n\r\nReading answers like [this](https://stackoverflow.com/questions/413473/dlopen-on-library-with-static-member-that-throws-exception-in-constructor-resu) it sounds like we shouldn't be able to catch that exception in the first place, but somehow the sleeps make it work.", "title": "[WIP] Catch exception thrown during dlopen", "destination": {"commit": {"hash": "6689cfd44b98", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/commit/6689cfd44b98.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/commits/6689cfd44b98"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f4e3de89-d527-44d3-b10f-fde17d644890}ts=c_plus_plus"}}, "type": "repository", "name": "ign-plugin", "full_name": "ignitionrobotics/ign-plugin", "uuid": "{f4e3de89-d527-44d3-b10f-fde17d644890}"}, "branch": {"name": "ign-plugin1"}}, "reason": "", "source": {"commit": {"hash": "ba4e61bb9898", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/commit/ba4e61bb9898.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/commits/ba4e61bb9898"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f4e3de89-d527-44d3-b10f-fde17d644890}ts=c_plus_plus"}}, "type": "repository", "name": "ign-plugin", "full_name": "ignitionrobotics/ign-plugin", "uuid": "{f4e3de89-d527-44d3-b10f-fde17d644890}"}, "branch": {"name": "dlopen_exception"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-12-17T18:21:03.304063+00:00"}, "pull_request": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/pullrequests/34.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/pull-requests/34"}}, "title": "[WIP] Catch exception thrown during dlopen"}}, {"update": {"description": "While porting code from Gazebo-classic to Ignition, often some Gazebo 9 plugin sneakily hides inside an SDF / URDF file, happens to be on the path and we try to `dlopen` it. The problem is that this mixes 2 different versions of `ign-msgs`, which causes protobuf to throw an exception:\r\n\r\n~~~\r\n[libprotobuf ERROR google/protobuf/descriptor_database.cc:57] File already exists in database: ignition/msgs/time.proto                                                         \r\n[libprotobuf FATAL google/protobuf/descriptor.cc:1164] CHECK failed: generated_database_->Add(encoded_file_descriptor, size):\r\nterminate called after throwing an instance of 'google::protobuf::FatalException'   \r\n  what():  CHECK failed: generated_database_->Add(encoded_file_descriptor, size):  \r\n~~~\r\n\r\nThis causes the whole program to crash, and it's tough for the end user to realize what's going wrong. Ideally, we'd handle this more elegantly. Maybe something can be done on the `ign-msgs` side. But for now, I tried something here.\r\n\r\nThis try/catch block cleanly handles the situation for me, the following is printed, the library is ignored and simulation goes on:\r\n\r\n\r\n```\r\nException thrown while loading library [/home/chapulina/rmf/build/ros1/install/lib/libpayload_handler.so]\r\n[Err] [SystemLoader.cc:75] Failed to load system plugin [libpayload_handler.so] : couldn't load library on path [/home/chapulina/rmf/build/ros1/install/lib/libpayload_handler.s\r\no].\r\n```\r\n\r\nBut the catch (no pun intended) is that if I don't wrap the `dlopen` call with those sleeps, for some reason the program fails to catch protobuf's exception and crashes. I really don't understand how that would matter.\r\n\r\nReading answers like [this](https://stackoverflow.com/questions/413473/dlopen-on-library-with-static-member-that-throws-exception-in-constructor-resu) it sounds like we shouldn't be able to catch that exception in the first place, but somehow the sleeps make it work.", "title": "[WIP] Catch exception thrown during dlopen", "destination": {"commit": {"hash": "6689cfd44b98", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/commit/6689cfd44b98.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/commits/6689cfd44b98"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f4e3de89-d527-44d3-b10f-fde17d644890}ts=c_plus_plus"}}, "type": "repository", "name": "ign-plugin", "full_name": "ignitionrobotics/ign-plugin", "uuid": "{f4e3de89-d527-44d3-b10f-fde17d644890}"}, "branch": {"name": "ign-plugin1"}}, "reason": "", "source": {"commit": {"hash": "ba4e61bb9898", "type": "commit", "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/commit/ba4e61bb9898.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/commits/ba4e61bb9898"}}}, "repository": {"links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin"}, "avatar": {"href": "data/bytebucket.org/ravatar/{f4e3de89-d527-44d3-b10f-fde17d644890}ts=c_plus_plus"}}, "type": "repository", "name": "ign-plugin", "full_name": "ignitionrobotics/ign-plugin", "uuid": "{f4e3de89-d527-44d3-b10f-fde17d644890}"}, "branch": {"name": "dlopen_exception"}}, "state": "OPEN", "author": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "date": "2019-12-17T18:21:03.250834+00:00"}, "pull_request": {"type": "pullrequest", "id": 34, "links": {"self": {"href": "data/repositories/ignitionrobotics/ign-plugin/pullrequests/34.json"}, "html": {"href": "#!/ignitionrobotics/ign-plugin/pull-requests/34"}}, "title": "[WIP] Catch exception thrown during dlopen"}}]}